<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Rootlex Blog</title>
  <icon>https://blog.nalex.top/icon.png</icon>
  
  <link href="https://blog.nalex.top/atom.xml" rel="self"/>
  
  <link href="https://blog.nalex.top/"/>
  <updated>2023-04-29T12:29:18.000Z</updated>
  <id>https://blog.nalex.top/</id>
  
  <author>
    <name>Rootlex</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2023042901</title>
    <link href="https://blog.nalex.top/posts/5005d079/"/>
    <id>https://blog.nalex.top/posts/5005d079/</id>
    <published>2023-04-29T12:29:18.000Z</published>
    <updated>2023-04-29T12:29:18.000Z</updated>
    
    
      
      
        
        
    <summary type="html"></summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>使用Artalk代替不蒜子统计PV</title>
    <link href="https://blog.nalex.top/posts/a61e63c2/"/>
    <id>https://blog.nalex.top/posts/a61e63c2/</id>
    <published>2023-01-30T02:42:40.000Z</published>
    <updated>2023-01-30T02:42:40.000Z</updated>
    
    
    <summary type="html">ai: 这篇文章介绍了如何通过Artalk的OpenAPI使用ARTALK统计API，并提供了NUXT实现和原生JS实现的示例。对于NUXT实现，需要在组件完成挂载后请求，并传入origin；而对于原生JS实现，可以通过promise.all和fetch来实现。</summary>
    
    
    
    <category term="教程" scheme="https://blog.nalex.top/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="Artalk" scheme="https://blog.nalex.top/tags/Artalk/"/>
    
  </entry>
  
  <entry>
    <title>Artalk部署教程</title>
    <link href="https://blog.nalex.top/posts/b19848b6/"/>
    <id>https://blog.nalex.top/posts/b19848b6/</id>
    <published>2023-01-29T13:49:40.000Z</published>
    <updated>2023-01-29T13:49:40.000Z</updated>
    
    
    <summary type="html">ai: 这篇文章介绍了如何通过Docker和CADDY来部署Artalk评论系统。首先介绍了Docker和CADDY的安装方法，然后详细说明了如何使用Docker来安装和启动Artalk，并开放端口进行访问。最后介绍了如何使用CADDY进行反代并访问。文章还解答了为什么不用宝塔、Nginx或Apache这些老牌站点管理器，以及为什么选择Artalk的原因。</summary>
    
    
    
    <category term="教程" scheme="https://blog.nalex.top/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="Artalk" scheme="https://blog.nalex.top/tags/Artalk/"/>
    
  </entry>
  
  <entry>
    <title>新的界面，新的开始</title>
    <link href="https://blog.nalex.top/posts/7a70876f/"/>
    <id>https://blog.nalex.top/posts/7a70876f/</id>
    <published>2023-01-24T03:20:00.000Z</published>
    <updated>2023-01-24T03:20:00.000Z</updated>
    
    
    <summary type="html">ai: 这篇文章介绍了作者开发新博客时的技术选型、开发过程中踩到的“坑”，以及最终所用到的技术和库。作者选择使用Vue.js + Nuxt + Nuxt Content + Vite + Typescript等技术，以及Feed和Nuxt/sitemap等库，并接入了Artalk评论系统。在开发过程中遇到了NUXT SSR不支持一些客户端方法和Artalk评论接入问题，解决方案有两种。最后，作者将博客部署在Vercel上，CDN则采用Farcdn。</summary>
    
    
    
    <category term="折腾" scheme="https://blog.nalex.top/categories/%E6%8A%98%E8%85%BE/"/>
    
    
    <category term="主题" scheme="https://blog.nalex.top/tags/%E4%B8%BB%E9%A2%98/"/>
    
    <category term="Nuxt" scheme="https://blog.nalex.top/tags/Nuxt/"/>
    
    <category term="Nuxt content" scheme="https://blog.nalex.top/tags/Nuxt-content/"/>
    
  </entry>
  
  <entry>
    <title>Waline实现动态说说</title>
    <link href="https://blog.nalex.top/posts/c323bf04/"/>
    <id>https://blog.nalex.top/posts/c323bf04/</id>
    <published>2022-11-19T13:46:56.000Z</published>
    <updated>2022-11-19T13:46:56.000Z</updated>
    
    
    <summary type="html">ai: 这篇文章介绍了一种用评论系统实现静态说说的方法。作者发现市面上已有的几种静态说说方案都存在一些缺点，于是想到利用评论系统来解决这个问题。文章给出了具体步骤和参数解析，包括在custom.js引入JS代码、新建waterfall.js文件、引入CSS样式、在_config.butterfly.yml中添加代码等。最后还提供了示例代码和页面头部设计。</summary>
    
    
    
    <category term="教程" scheme="https://blog.nalex.top/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="说说" scheme="https://blog.nalex.top/tags/%E8%AF%B4%E8%AF%B4/"/>
    
    <category term="Waline" scheme="https://blog.nalex.top/tags/Waline/"/>
    
  </entry>
  
  <entry>
    <title>仿Heo音乐播放器</title>
    <link href="https://blog.nalex.top/posts/6177b8b5/"/>
    <id>https://blog.nalex.top/posts/6177b8b5/</id>
    <published>2022-11-13T03:25:45.000Z</published>
    <updated>2022-11-10T03:25:45.000Z</updated>
    
    
    <summary type="html">ai: 这篇文章介绍了如何在博客中添加音乐播放器。作者参考了另一个博客的设计，使用了一款名为 aplayer 的插件，并提供了参数解析和自定义CSS样式的方法。最终实现了一个漂亮的音乐播放器，可以在博客上通过自定义标签引用。</summary>
    
    
    
    <category term="教程" scheme="https://blog.nalex.top/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="Heo" scheme="https://blog.nalex.top/tags/Heo/"/>
    
    <category term="音乐" scheme="https://blog.nalex.top/tags/%E9%9F%B3%E4%B9%90/"/>
    
  </entry>
  
  <entry>
    <title>如何部署unpkg至服务器</title>
    <link href="https://blog.nalex.top/posts/8f292cc0/"/>
    <id>https://blog.nalex.top/posts/8f292cc0/</id>
    <published>2022-01-22T22:53:00.000Z</published>
    <updated>2022-10-09T10:27:00.000Z</updated>
    
    
    <summary type="html">ai: 这篇文章介绍了如何在Linux服务器上部署自己的unpkg，以解决使用公共CDN时出现无法访问问题。首先需要保证8888端口已开放，并安装nodejs。然后从GitHub克隆Unpkg源码，在此基础上运行Unpkg，去除与cloudflare相关组件并重新构建node项目。最后将Unpkg部署到网站上并启动，即可访问。文章提供了详细的步骤和示意图；并参考了前辈的经验。</summary>
    
    
    
    <category term="教程" scheme="https://blog.nalex.top/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="Unpkg" scheme="https://blog.nalex.top/tags/Unpkg/"/>
    
    <category term="服务器" scheme="https://blog.nalex.top/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>Hexo</title>
    <link href="https://blog.nalex.top/posts/ec7d7221/"/>
    <id>https://blog.nalex.top/posts/ec7d7221/</id>
    <published>2021-12-19T05:52:46.000Z</published>
    <updated>2022-01-14T07:30:46.000Z</updated>
    
    
    <summary type="html">ai: 这篇文章介绍了如何使用Hexo和Butterfly主题快速搭建个人博客，并将其部署到GitHub或Gitee上。首先需要安装Git和Node.js，然后在命令行中初始化并安装Hexo和Butterfly主题。最后，根据教程将Hexo博客部署到服务器上，包括使用GitHub Page和Vercel。注意事项和操作步骤都有详细说明。</summary>
    
    
    
    <category term="教程" scheme="https://blog.nalex.top/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="Hexo" scheme="https://blog.nalex.top/tags/Hexo/"/>
    
    <category term="butterfly" scheme="https://blog.nalex.top/tags/butterfly/"/>
    
  </entry>
  
  <entry>
    <title>互联网</title>
    <link href="https://blog.nalex.top/posts/80cfaa0f/"/>
    <id>https://blog.nalex.top/posts/80cfaa0f/</id>
    <published>2020-05-02T23:45:15.000Z</published>
    <updated>2021-02-09T06:09:24.000Z</updated>
    
    
    <summary type="html">ai: 这篇文章介绍了互联网的工作原理。首先，介绍了互联网是由相互连接的网络组成的庞大网络，以及互联网和万维网的区别。然后，解释了协议在互联网中的作用，并详细介绍了IP协议，在互联网中的位置和功能。接下来，讲解了DNS系统的作用，它可以将域名和IP地址相互映射，使人们更方便地访问互联网。最后，提到客户端会按照协议发送请求，向DNS服务器发起请求查找对应的IP地址，并向该IP地址定位的HTTP服务器发起TCP连接。</summary>
    
    
    
    <category term="笔记" scheme="https://blog.nalex.top/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="互联网" scheme="https://blog.nalex.top/tags/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
  </entry>
  
</feed>
